{
  "openapi": "3.0.1",
  "info": {
    "title": "API de Control de Inventario",
    "version": "1.0.0",
    "description": "Esta API permite gestionar los inventarios de una tienda y la administraci√≥n de usuarios."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/inventory": {
      "post": {
        "summary": "Add a new product or update an existing one in the inventory.",
        "description": "Allows adding a new product or increasing/updating the quantity and storage location of an existing product by its name.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "unitPrice",
                  "quantity",
                  "storageLocation"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Brand X Potato Chips"
                  },
                  "unitPrice": {
                    "type": "number",
                    "format": "float",
                    "example": 1.5
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 20
                  },
                  "storageLocation": {
                    "type": "string",
                    "enum": [
                      "in stock",
                      "in warehouse"
                    ],
                    "example": "in stock"
                  }
                },
                "examples": {
                  "addNewProduct": {
                    "summary": "Add new product",
                    "value": {
                      "name": "Brand X Soda",
                      "unitPrice": 2.25,
                      "quantity": 50,
                      "storageLocation": "in warehouse"
                    }
                  },
                  "updateExistingProduct": {
                    "summary": "Update quantity of existing product",
                    "value": {
                      "name": "Brand X Potato Chips",
                      "unitPrice": 1.5,
                      "quantity": 10,
                      "storageLocation": "in stock"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quantity of existing product updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Quantity of \"Brand X Potato Chips\" updated."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Product added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product \"Brand X Soda\" added."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error if required fields are not provided or storage location is invalid, or if data types are incorrect.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Inventory"
        ]
      },
      "get": {
        "summary": "Get the complete inventory list with pagination.",
        "description": "Returns a paginated list of all products in the inventory, including their quantity, price, and location.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of products in the inventory.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Inventario recuperado exitosamente."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalItems": {
                          "type": "integer",
                          "example": 50
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 5
                        },
                        "currentPage": {
                          "type": "integer",
                          "example": 1
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid page or limit parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/inventory/{id}": {
      "get": {
        "summary": "Get a product from the inventory by its ID.",
        "description": "Returns the detailed information of a specific product identified by its unique ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the product to retrieve.",
            "schema": {
              "type": "string",
              "example": "PROD-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Producto encontrado."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Inventory"
        ]
      },
      "put": {
        "summary": "Update the information of a product by its ID.",
        "description": "Allows modifying the price, quantity, and location of an existing product. All fields are optional, but at least one must be provided.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the product to update.",
            "schema": {
              "type": "string",
              "example": "PROD-0001"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unitPrice": {
                    "type": "number",
                    "format": "float",
                    "example": 1.75
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 25
                  },
                  "storageLocation": {
                    "type": "string",
                    "enum": [
                      "in stock",
                      "in warehouse"
                    ],
                    "example": "in warehouse"
                  }
                },
                "minProperties": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product with ID \"PROD-0001\" updated successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error if validation fails for any of the fields provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Inventory"
        ]
      },
      "delete": {
        "summary": "Delete a product from the inventory by its ID.",
        "description": "Removes a specific product from the inventory based on its unique ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the product to delete.",
            "schema": {
              "type": "string",
              "example": "PROD-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product with ID \"PROD-0001\" deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error if the product ID is not provided or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/inventory/search": {
      "get": {
        "summary": "Search products by name.",
        "description": "Returns a list of products whose name contains the provided search term (case-insensitive).",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "description": "Name of the product to search for.",
            "schema": {
              "type": "string",
              "example": "potato"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products matching the search term. Returns an empty array if no products are found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Resultados de b√∫squeda para \"potato\"."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error if the 'name' query parameter is not provided or is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/sales": {
      "post": {
        "summary": "Record a new sale.",
        "description": "Records a new sale, updates the sales history, and decreases the stock quantity of the sold products.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "example": "abc-123-xyz"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sale recorded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sale recorded successfully."
                    },
                    "sale": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "uuid-de-la-venta"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-18T15:30:00.000Z"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "productId": {
                                "type": "string",
                                "example": "abc-123-xyz"
                              },
                              "name": {
                                "type": "string",
                                "example": "Brand X Potato Chips"
                              },
                              "quantity": {
                                "type": "integer",
                                "example": 2
                              },
                              "unitPrice": {
                                "type": "number",
                                "format": "float",
                                "example": 1.5
                              },
                              "totalPrice": {
                                "type": "number",
                                "format": "float",
                                "example": 3
                              }
                            }
                          }
                        },
                        "totalSaleAmount": {
                          "type": "number",
                          "format": "float",
                          "example": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error if no products provided, product not found, or insufficient stock."
          }
        },
        "tags": [
          "Sales"
        ]
      }
    },
    "/api/sales/history": {
      "get": {
        "summary": "Get the history of all sales.",
        "description": "Returns a list of all recorded sales.",
        "responses": {
          "200": {
            "description": "List of all sales records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "uuid-de-la-venta"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-18T15:30:00.000Z"
                      },
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "type": "string",
                              "example": "abc-123-xyz"
                            },
                            "name": {
                              "type": "string",
                              "example": "Brand X Potato Chips"
                            },
                            "quantity": {
                              "type": "integer",
                              "example": 2
                            },
                            "unitPrice": {
                              "type": "number",
                              "format": "float",
                              "example": 1.5
                            },
                            "totalPrice": {
                              "type": "number",
                              "format": "float",
                              "example": 3
                            }
                          }
                        }
                      },
                      "totalSaleAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 3
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Sales"
        ]
      }
    },
    "/api/sales/{saleId}/invoice": {
      "get": {
        "summary": "Descargar factura de venta en PDF",
        "description": "Genera y descarga la factura en formato PDF para una venta espec√≠fica.",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saleId",
            "required": true,
            "description": "ID de la venta para la cual se generar√° la factura.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo PDF de la factura.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Venta no encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sale with ID \"some-sale-id\" not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error al generar el PDF de la factura.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to generate invoice PDF."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Crea un nuevo usuario.",
        "description": "Crea un nuevo usuario con la informaci√≥n proporcionada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "securePassword"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "employee",
                        "developer"
                      ]
                    },
                    "example": [
                      "employee"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-example"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error si los campos requeridos no se proporcionan."
          },
          "409": {
            "description": "Error si el correo electr√≥nico ya est√° registrado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "summary": "Obtiene todos los usuarios habilitados.",
        "description": "Retorna una lista de todos los usuarios que est√°n actualmente habilitados en el sistema.",
        "responses": {
          "200": {
            "description": "Lista de usuarios habilitados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "uuid-example"
                      },
                      "fullName": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe123"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "employee"
                        }
                      },
                      "isEnabled": {
                        "type": "boolean",
                        "example": true
                      },
                      "permissions": {
                        "type": "object",
                        "example": {
                          "control_usuarios": {
                            "read": false,
                            "write": false,
                            "delete": false
                          },
                          "inventario": {
                            "read": false,
                            "write": false,
                            "delete": false
                          },
                          "ventas_diarias": {
                            "read": true,
                            "write": true,
                            "delete": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Obtiene un usuario por su ID.",
        "description": "Retorna la informaci√≥n de un usuario espec√≠fico basado en el ID proporcionado.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del usuario a obtener.",
            "schema": {
              "type": "string",
              "example": "uuid-example"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-example"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe123"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "employee"
                      }
                    },
                    "isEnabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "permissions": {
                      "type": "object",
                      "example": {
                        "control_usuarios": {
                          "read": false,
                          "write": false,
                          "delete": false
                        },
                        "inventario": {
                          "read": false,
                          "write": false,
                          "delete": false
                        },
                        "ventas_diarias": {
                          "read": true,
                          "write": true,
                          "delete": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "summary": "Actualiza la informaci√≥n de un usuario por su ID.",
        "description": "Permite actualizar los detalles de un usuario espec√≠fico.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del usuario a actualizar.",
            "schema": {
              "type": "string",
              "example": "uuid-example"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "jane.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "newSecurePassword"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "employee",
                        "developer"
                      ]
                    },
                    "example": [
                      "admin"
                    ]
                  },
                  "permissions": {
                    "type": "object",
                    "example": {
                      "control_usuarios": {
                        "read": true,
                        "write": true,
                        "delete": true
                      },
                      "inventario": {
                        "read": true,
                        "write": true,
                        "delete": true
                      },
                      "ventas_diarias": {
                        "read": true,
                        "write": true,
                        "delete": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Informaci√≥n del usuario actualizada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-example"
                    },
                    "message": {
                      "type": "string",
                      "example": "Informaci√≥n del usuario actualizada exitosamente."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/disable": {
      "patch": {
        "summary": "Deshabilita un usuario por su ID.",
        "description": "Marca a un usuario espec√≠fico como deshabilitado.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del usuario a deshabilitar.",
            "schema": {
              "type": "string",
              "example": "uuid-example"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario deshabilitado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid-example"
                    },
                    "message": {
                      "type": "string",
                      "example": "Usuario deshabilitado exitosamente."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Inicia sesi√≥n de usuario.",
        "description": "Permite iniciar sesi√≥n con correo electr√≥nico o nombre de usuario y contrase√±a.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Correo electr√≥nico o nombre de usuario del usuario.",
                    "example": "john.doe@example.com o johndoe123"
                  },
                  "password": {
                    "type": "string",
                    "description": "Contrase√±a del usuario.",
                    "example": "securePassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesi√≥n exitoso. Devuelve un token de autenticaci√≥n (simulado por ahora).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Inicio de sesi√≥n exitoso"
                    },
                    "token": {
                      "type": "string",
                      "example": "generated_token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inv√°lidas."
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "PROD-0001"
          },
          "name": {
            "type": "string",
            "example": "Brand X Potato Chips"
          },
          "unitPrice": {
            "type": "number",
            "format": "float",
            "example": 1.5
          },
          "quantity": {
            "type": "integer",
            "example": 20
          },
          "storageLocation": {
            "type": "string",
            "example": "in stock"
          },
          "stockStatus": {
            "type": "string",
            "enum": [
              "bien",
              "medio",
              "bajo"
            ],
            "example": "bien"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Errores de validaci√≥n"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "El nombre del producto es requerido y debe ser una cadena de texto."
            },
            "example": [
              "El precio unitario debe ser un n√∫mero positivo.",
              "La ubicaci√≥n de almacenamiento debe ser 'in stock' o 'in warehouse'."
            ]
          }
        }
      }
    }
  },
  "tags": []
}